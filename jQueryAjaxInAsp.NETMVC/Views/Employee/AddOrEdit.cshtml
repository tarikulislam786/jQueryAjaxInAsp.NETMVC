@model jQueryAjaxInAsp.NETMVC.Models.Employee

@{
    ViewBag.Title = "AddOrEdit";
    Layout = null;

    if(Session["UserID"] == null)
    {
        Response.Redirect("~/Login/Index");
    } 
}


@using (Html.BeginForm("AddOrEdit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_resetUrl = Url.Action("AddOrEdit", "Employee", new { id = 0 }) })) // data-resetUrl
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-horizontal">
            <h4>Employee: @Session["Username"].ToString()</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.EmployeeID)
            @Html.HiddenFor(model => model.ImagePath)
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Office, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Office, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Office, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-default" />
                        @if(Model.EmployeeID != 0)
                        {
                            <a class="btn btn-success" onclick="refreshAddNewTab('@Url.Action("AddOrEdit", "Employee", new { id = 0 })', false)"><i class="fa fa-plus"></i>Add New</a>
                        }
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })*@

                        <img src="@Url.Content(Model.ImagePath)" style="margin:10px" height="180" width="180" id="imagePreview" />
                        <input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this, document.getElementById('imagePreview'))" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}

